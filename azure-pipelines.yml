# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
  containers:
  - container: platformio
    image: esp32_measurement_node/platformio-for-ci:latest
    # endpoint: dockerhub-infinite-coding

jobs:
- job: esp32_platformio
  displayName: "PlatformIO build"
  container: platformio
  pool:
    vmImage: ubuntu-16.04
  steps:
    - script: |
        rm -fdr bin
        mkdir bin
      displayName: 'Prepare output directories'      
    - script: platformio ci --build-dir="./bin" --keep-build-dir --project-conf=platformio.ini .
      displayName: 'Build firmware'
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Build.SourcesDirectory)/bin/.pioenvs/esp32doit-devkit-v1/
        Contents: ['firmware.bin' | spiffs.bin ]
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        ArtifactName: 'Firmware $(Build.BuildNumber)'
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        publishLocation: Container
        TargetPath: .
